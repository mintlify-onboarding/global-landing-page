{
    "components": {
      "schemas": {
        "APIIsometricId_CreditBatch_": {
          "type": "string"
        },
        "APIIsometricId_Delivery_": {
          "type": "string"
        },
        "APIIsometricId_Issuance_": {
          "type": "string"
        },
        "APIIsometricId_Order_": {
          "type": "string"
        },
        "APIIsometricId_Organisation_": {
          "type": "string"
        },
        "APIIsometricId_Project_": {
          "type": "string"
        },
        "APIIsometricId_Retirement_": {
          "type": "string"
        },
        "APIIsometricId_Supplier_": {
          "type": "string"
        },
        "APIIsometricId_Transfer_": {
          "type": "string"
        },
        "CreateDeliveryRequest": {
          "properties": {
            "credit_batch_quantities": {
              "description": "A list of credit batch IDs and kilogram amounts of each to deliver.",
              "items": {
                "$ref": "#/components/schemas/CreditBatchQuantity"
              },
              "minItems": 1,
              "title": "Credit Batch Quantities",
              "type": "array"
            },
            "notes": {
              "anyOf": [
                {
                  "maxLength": 256,
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "A publicly visible note stored with the credit delivery.",
              "examples": ["Delivered with care."],
              "title": "Notes"
            },
            "order_id": {
              "description": "The ID of the order you wish to fulfil with the specified credit batch amounts.",
              "examples": ["pfx_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Order Id",
              "type": "string"
            }
          },
          "required": ["credit_batch_quantities", "order_id", "notes"],
          "title": "CreateDeliveryRequest",
          "type": "object"
        },
        "CreateRetirementRequest": {
          "properties": {
            "beneficiary_organisation_id": {
              "description": "The ID of the organisation that the credits will be retired in the name of, this can be the same as `owner_organisation_id`.",
              "examples": ["pfx_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Beneficiary Organisation Id",
              "type": "string"
            },
            "credit_batch_quantities": {
              "description": "A list of credit batch IDs and kilogram amounts of each to retire.",
              "items": {
                "$ref": "#/components/schemas/CreditBatchQuantity"
              },
              "minItems": 1,
              "title": "Credit Batch Quantities",
              "type": "array"
            },
            "notes": {
              "anyOf": [
                {
                  "maxLength": 256,
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "A publicly visible note stored with the credit retirement.",
              "examples": ["Retired with care."],
              "title": "Notes"
            },
            "owner_organisation_id": {
              "description": "The ID of the organisation owns the credits to be retired. Typically this would be your own organisation ID.",
              "examples": ["pfx_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Owner Organisation Id",
              "type": "string"
            },
            "retirement_purposes": {
              "items": {
                "$ref": "#/components/schemas/RetirementPurpose"
              },
              "minItems": 1,
              "title": "Retirement Purposes",
              "type": "array",
              "uniqueItems": true
            },
            "supplier_id": {
              "description": "All credits in a retirement must originate from the same supplier.",
              "examples": ["pfx_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Supplier Id",
              "type": "string"
            }
          },
          "required": [
            "credit_batch_quantities",
            "owner_organisation_id",
            "beneficiary_organisation_id",
            "supplier_id",
            "retirement_purposes",
            "notes"
          ],
          "title": "CreateRetirementRequest",
          "type": "object"
        },
        "CreateTransferRequest": {
          "properties": {
            "credit_batch_quantities": {
              "description": "A list of credit batch IDs and kilogram amounts of each to transfer.",
              "items": {
                "$ref": "#/components/schemas/CreditBatchQuantity"
              },
              "title": "Credit Batch Quantities",
              "type": "array"
            },
            "from_organisation_id": {
              "description": "The ID of the organisation that is sending the credits. Typically this would be your own organisation ID.",
              "examples": ["pfx_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "From Organisation Id",
              "type": "string"
            },
            "notes": {
              "anyOf": [
                {
                  "maxLength": 256,
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "A publicly visible note stored with the credit transfer.",
              "examples": ["Transferred with care."],
              "title": "Notes"
            },
            "supplier_id": {
              "description": "All credits in a transfer must originate from the same supplier.",
              "examples": ["pfx_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Supplier Id",
              "type": "string"
            },
            "to_organisation_id": {
              "description": "The ID of the organisation that will receive the credits.",
              "examples": ["pfx_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "To Organisation Id",
              "type": "string"
            }
          },
          "required": [
            "credit_batch_quantities",
            "from_organisation_id",
            "to_organisation_id",
            "supplier_id",
            "notes"
          ],
          "title": "CreateTransferRequest",
          "type": "object"
        },
        "CreditBalance": {
          "properties": {
            "active_credits_total": {
              "$ref": "#/components/schemas/CreditQuantity"
            },
            "retired_credits_total": {
              "$ref": "#/components/schemas/CreditQuantity"
            }
          },
          "required": ["active_credits_total", "retired_credits_total"],
          "title": "CreditBalance",
          "type": "object"
        },
        "CreditBatch": {
          "properties": {
            "beneficiary": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Organisation"
                },
                {
                  "type": "null"
                }
              ]
            },
            "country_of_issue": {
              "examples": ["GBR"],
              "maxLength": 3,
              "minLength": 3,
              "title": "Country Of Issue",
              "type": "string"
            },
            "id": {
              "examples": ["abc_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Id",
              "type": "string"
            },
            "issuance_id": {
              "examples": ["pfx_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Issuance Id",
              "type": "string"
            },
            "issued_at": {
              "format": "date-time",
              "title": "Issued At",
              "type": "string"
            },
            "left_child_id": {
              "anyOf": [
                {
                  "examples": ["pfx_1H0G39139CF0DZB2"],
                  "maxLength": 20,
                  "minLength": 20,
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "If this credit batch has status `SPLIT`, it will have two child batches representing the two halves of this split.",
              "title": "Left Child Id"
            },
            "owner": {
              "$ref": "#/components/schemas/Organisation"
            },
            "parent_id": {
              "anyOf": [
                {
                  "examples": ["pfx_1H0G39139CF0DZB2"],
                  "maxLength": 20,
                  "minLength": 20,
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "If this credit batch was created from splitting a larger batch in two, this will be set to the id of the parent credit batch.",
              "title": "Parent Id"
            },
            "project_id": {
              "examples": ["pfx_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Project Id",
              "type": "string"
            },
            "removal_id": {
              "examples": ["pfx_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Removal Id",
              "type": "string"
            },
            "retired_at": {
              "anyOf": [
                {
                  "format": "date-time",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Retired At"
            },
            "retirement_id": {
              "anyOf": [
                {
                  "examples": ["pfx_1H0G39139CF0DZB2"],
                  "maxLength": 20,
                  "minLength": 20,
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Retirement Id"
            },
            "right_child_id": {
              "anyOf": [
                {
                  "examples": ["pfx_1H0G39139CF0DZB2"],
                  "maxLength": 20,
                  "minLength": 20,
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "If this credit batch has status `SPLIT`, it will have two child batches representing the two halves of this split.",
              "title": "Right Child Id"
            },
            "sequestered_at": {
              "format": "date-time",
              "title": "Sequestered At",
              "type": "string"
            },
            "serial_number": {
              "examples": ["ISO-1-BSTORE-GBR-F5X7-2024-78177-81177"],
              "title": "Serial Number",
              "type": "string"
            },
            "size": {
              "$ref": "#/components/schemas/CreditQuantity"
            },
            "status": {
              "$ref": "#/components/schemas/CreditBatchStatus"
            }
          },
          "required": [
            "id",
            "serial_number",
            "status",
            "size",
            "issued_at",
            "retired_at",
            "sequestered_at",
            "country_of_issue",
            "parent_id",
            "left_child_id",
            "right_child_id",
            "issuance_id",
            "beneficiary",
            "retirement_id",
            "removal_id",
            "owner",
            "project_id"
          ],
          "title": "CreditBatch",
          "type": "object"
        },
        "CreditBatchQuantity": {
          "properties": {
            "credit_batch_id": {
              "examples": ["pfx_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Credit Batch Id",
              "type": "string"
            },
            "credit_quantity_kg": {
              "description": "A representation of a credit quantity as an **integer kilogram amount**. Where **1 unit represents 0.001 credits** and 1 kilogram of CO\u2082e.",
              "examples": [1000],
              "exclusiveMinimum": 0.0,
              "title": "Credit Quantity Kg",
              "type": "integer"
            }
          },
          "required": ["credit_batch_id", "credit_quantity_kg"],
          "title": "CreditBatchQuantity",
          "type": "object"
        },
        "CreditBatchStatus": {
          "enum": ["active", "split", "retired"],
          "title": "CreditBatchStatus",
          "type": "string"
        },
        "CreditQuantity": {
          "properties": {
            "credit_kgs": {
              "description": "A representation of the credit quantity as an integer kilogram amount. Where 1 unit represents 0.001 credits and 1 kilogram of CO\u2082e.",
              "examples": [125632],
              "title": "Credit Kgs",
              "type": "integer"
            },
            "credits": {
              "description": "A representation of the credit quantity as a fractional amount, to 3 decimal places. Where 1 unit represents 1 credit and 1 ton of CO\u2082e.",
              "examples": [125.632],
              "title": "Credits",
              "type": "number"
            }
          },
          "required": ["credits", "credit_kgs"],
          "title": "CreditQuantity",
          "type": "object"
        },
        "DatetimeFilter": {
          "description": "Filter options based on a datetime field as a url encoded json object.\nMultiple filters can be applied via duplicate query params with the same key, these filters are applied as logical AND operations.",
          "properties": {
            "operator": {
              "$ref": "#/components/schemas/NumericFilterOperator"
            },
            "value": {
              "format": "date-time",
              "title": "Value",
              "type": "string"
            }
          },
          "required": ["value", "operator"],
          "title": "DatetimeFilter",
          "type": "object"
        },
        "Delivery": {
          "properties": {
            "credit_batch_size_total": {
              "$ref": "#/components/schemas/CreditQuantity"
            },
            "delivered_at": {
              "format": "date-time",
              "title": "Delivered At",
              "type": "string"
            },
            "from_supplier": {
              "$ref": "#/components/schemas/Supplier"
            },
            "id": {
              "examples": ["abc_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Id",
              "type": "string"
            },
            "notes": {
              "anyOf": [
                {
                  "maxLength": 256,
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "A publicly visible note stored with the credit delivery.",
              "examples": ["Delivered with care."],
              "title": "Notes"
            },
            "order_id": {
              "examples": ["pfx_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Order Id",
              "type": "string"
            },
            "to_organisation": {
              "$ref": "#/components/schemas/Organisation"
            }
          },
          "required": [
            "id",
            "delivered_at",
            "order_id",
            "from_supplier",
            "to_organisation",
            "credit_batch_size_total",
            "notes"
          ],
          "title": "Delivery",
          "type": "object"
        },
        "HTTPValidationError": {
          "properties": {
            "detail": {
              "items": {
                "$ref": "#/components/schemas/ValidationError"
              },
              "title": "Detail",
              "type": "array"
            }
          },
          "title": "HTTPValidationError",
          "type": "object"
        },
        "Issuance": {
          "properties": {
            "buffer_pool_credit_batch_size_total": {
              "$ref": "#/components/schemas/CreditQuantity"
            },
            "credit_batch_size_total": {
              "$ref": "#/components/schemas/CreditQuantity"
            },
            "id": {
              "examples": ["abc_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Id",
              "type": "string"
            },
            "issued_at": {
              "format": "date-time",
              "title": "Issued At",
              "type": "string"
            },
            "project_id": {
              "examples": ["pfx_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Project Id",
              "type": "string"
            },
            "supplier": {
              "$ref": "#/components/schemas/Supplier"
            },
            "supplier_credit_batch_size_total": {
              "$ref": "#/components/schemas/CreditQuantity"
            }
          },
          "required": [
            "id",
            "issued_at",
            "supplier",
            "project_id",
            "supplier_credit_batch_size_total",
            "buffer_pool_credit_batch_size_total",
            "credit_batch_size_total"
          ],
          "title": "Issuance",
          "type": "object"
        },
        "IssuanceCreditBatches": {
          "properties": {
            "buffer_pool_credit_batch_size_total": {
              "$ref": "#/components/schemas/CreditQuantity"
            },
            "buffer_pool_credit_batches": {
              "items": {
                "$ref": "#/components/schemas/CreditBatch"
              },
              "title": "Buffer Pool Credit Batches",
              "type": "array"
            },
            "credit_batch_size_total": {
              "$ref": "#/components/schemas/CreditQuantity"
            },
            "issuance_id": {
              "examples": ["pfx_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Issuance Id",
              "type": "string"
            },
            "supplier_credit_batch_size_total": {
              "$ref": "#/components/schemas/CreditQuantity"
            },
            "supplier_credit_batches": {
              "items": {
                "$ref": "#/components/schemas/CreditBatch"
              },
              "title": "Supplier Credit Batches",
              "type": "array"
            }
          },
          "required": [
            "issuance_id",
            "supplier_credit_batches",
            "supplier_credit_batch_size_total",
            "buffer_pool_credit_batches",
            "buffer_pool_credit_batch_size_total",
            "credit_batch_size_total"
          ],
          "title": "IssuanceCreditBatches",
          "type": "object"
        },
        "ListResource_CreditBatch_": {
          "properties": {
            "nodes": {
              "items": {
                "$ref": "#/components/schemas/CreditBatch"
              },
              "title": "Nodes",
              "type": "array"
            },
            "total_count": {
              "title": "Total Count",
              "type": "integer"
            }
          },
          "required": ["nodes", "total_count"],
          "title": "ListResource[CreditBatch]",
          "type": "object"
        },
        "NumericFilterOperator": {
          "description": "`gt` - Greater than\n`ge` - Greater than or equal\n`lt` - Less than\n`le` - Less than or equal",
          "enum": ["gt", "ge", "lt", "le"],
          "title": "NumericFilterOperator",
          "type": "string"
        },
        "Order": {
          "properties": {
            "buyer_organisation": {
              "$ref": "#/components/schemas/Organisation"
            },
            "credits_delivered": {
              "$ref": "#/components/schemas/CreditQuantity"
            },
            "credits_ordered": {
              "$ref": "#/components/schemas/CreditQuantity"
            },
            "fulfilled_at": {
              "anyOf": [
                {
                  "format": "date-time",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Fulfilled At"
            },
            "id": {
              "examples": ["abc_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Id",
              "type": "string"
            },
            "placed_at": {
              "format": "date-time",
              "title": "Placed At",
              "type": "string"
            },
            "status": {
              "$ref": "#/components/schemas/OrderStatus"
            },
            "supplier": {
              "$ref": "#/components/schemas/Supplier"
            }
          },
          "required": [
            "id",
            "placed_at",
            "fulfilled_at",
            "buyer_organisation",
            "supplier",
            "status",
            "credits_ordered",
            "credits_delivered"
          ],
          "title": "Order",
          "type": "object"
        },
        "OrderStatus": {
          "enum": ["placed", "in_progress", "completed"],
          "title": "OrderStatus",
          "type": "string"
        },
        "Organisation": {
          "properties": {
            "domain": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "examples": ["isometric.com"],
              "title": "Domain"
            },
            "id": {
              "examples": ["abc_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Id",
              "type": "string"
            },
            "name": {
              "examples": ["Isometric"],
              "title": "Name",
              "type": "string"
            }
          },
          "required": ["id", "name", "domain"],
          "title": "Organisation",
          "type": "object"
        },
        "OrganisationCreditBalance": {
          "properties": {
            "project_balances": {
              "items": {
                "$ref": "#/components/schemas/ProjectCreditBalance"
              },
              "title": "Project Balances",
              "type": "array"
            },
            "supplier_balances": {
              "items": {
                "$ref": "#/components/schemas/SupplierCreditBalance"
              },
              "title": "Supplier Balances",
              "type": "array"
            },
            "total": {
              "$ref": "#/components/schemas/CreditBalance"
            }
          },
          "required": ["total", "supplier_balances", "project_balances"],
          "title": "OrganisationCreditBalance",
          "type": "object"
        },
        "PageInfo": {
          "properties": {
            "end_cursor": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Cursor"
            },
            "has_next_page": {
              "title": "Has Next Page",
              "type": "boolean"
            },
            "has_previous_page": {
              "title": "Has Previous Page",
              "type": "boolean"
            },
            "start_cursor": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Cursor"
            }
          },
          "required": [
            "has_previous_page",
            "start_cursor",
            "has_next_page",
            "end_cursor"
          ],
          "title": "PageInfo",
          "type": "object"
        },
        "PaginatedListResource_CreditBatch_": {
          "properties": {
            "nodes": {
              "items": {
                "$ref": "#/components/schemas/CreditBatch"
              },
              "title": "Nodes",
              "type": "array"
            },
            "page_info": {
              "$ref": "#/components/schemas/PageInfo"
            },
            "total_count": {
              "title": "Total Count",
              "type": "integer"
            }
          },
          "required": ["nodes", "total_count", "page_info"],
          "title": "PaginatedListResource[CreditBatch]",
          "type": "object"
        },
        "PaginatedListResource_Delivery_": {
          "properties": {
            "nodes": {
              "items": {
                "$ref": "#/components/schemas/Delivery"
              },
              "title": "Nodes",
              "type": "array"
            },
            "page_info": {
              "$ref": "#/components/schemas/PageInfo"
            },
            "total_count": {
              "title": "Total Count",
              "type": "integer"
            }
          },
          "required": ["nodes", "total_count", "page_info"],
          "title": "PaginatedListResource[Delivery]",
          "type": "object"
        },
        "PaginatedListResource_Issuance_": {
          "properties": {
            "nodes": {
              "items": {
                "$ref": "#/components/schemas/Issuance"
              },
              "title": "Nodes",
              "type": "array"
            },
            "page_info": {
              "$ref": "#/components/schemas/PageInfo"
            },
            "total_count": {
              "title": "Total Count",
              "type": "integer"
            }
          },
          "required": ["nodes", "total_count", "page_info"],
          "title": "PaginatedListResource[Issuance]",
          "type": "object"
        },
        "PaginatedListResource_Order_": {
          "properties": {
            "nodes": {
              "items": {
                "$ref": "#/components/schemas/Order"
              },
              "title": "Nodes",
              "type": "array"
            },
            "page_info": {
              "$ref": "#/components/schemas/PageInfo"
            },
            "total_count": {
              "title": "Total Count",
              "type": "integer"
            }
          },
          "required": ["nodes", "total_count", "page_info"],
          "title": "PaginatedListResource[Order]",
          "type": "object"
        },
        "PaginatedListResource_Organisation_": {
          "properties": {
            "nodes": {
              "items": {
                "$ref": "#/components/schemas/Organisation"
              },
              "title": "Nodes",
              "type": "array"
            },
            "page_info": {
              "$ref": "#/components/schemas/PageInfo"
            },
            "total_count": {
              "title": "Total Count",
              "type": "integer"
            }
          },
          "required": ["nodes", "total_count", "page_info"],
          "title": "PaginatedListResource[Organisation]",
          "type": "object"
        },
        "PaginatedListResource_Project_": {
          "properties": {
            "nodes": {
              "items": {
                "$ref": "#/components/schemas/Project"
              },
              "title": "Nodes",
              "type": "array"
            },
            "page_info": {
              "$ref": "#/components/schemas/PageInfo"
            },
            "total_count": {
              "title": "Total Count",
              "type": "integer"
            }
          },
          "required": ["nodes", "total_count", "page_info"],
          "title": "PaginatedListResource[Project]",
          "type": "object"
        },
        "PathwayType": {
          "enum": [
            "biomass_carbon_removal_and_storage",
            "enhanced_weathering",
            "ocean_alkalinity_enhancement",
            "direct_air_capture",
            "carbon_mineralization",
            "electrolytic_marine_co2_removal"
          ],
          "title": "PathwayType",
          "type": "string"
        },
        "Project": {
          "properties": {
            "country_code": {
              "description": "A three letter ISO 3166-1 alpha-3 code representing a country",
              "examples": ["GBR"],
              "title": "Country Code",
              "type": "string"
            },
            "crediting_period_end": {
              "anyOf": [
                {
                  "format": "date-time",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Crediting Period End"
            },
            "crediting_period_start": {
              "anyOf": [
                {
                  "format": "date-time",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Crediting Period Start"
            },
            "id": {
              "examples": ["abc_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Id",
              "type": "string"
            },
            "issued_buffer_pool_credits_total": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CreditQuantity"
                }
              ],
              "description": "The total number of credits from this project that have been allocated to the supplier's buffer pool"
            },
            "issued_credits_total": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CreditQuantity"
                }
              ],
              "description": "The total number of credits Isometric has issued to this project, including those allocated to the buffer pool"
            },
            "name": {
              "title": "Name",
              "type": "string"
            },
            "retired_buffer_pool_credits_total": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CreditQuantity"
                }
              ],
              "description": "The total number of credits from this project that have been retired from the supplier's buffer pool"
            },
            "retired_credits_total": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CreditQuantity"
                }
              ],
              "description": "The total number of credits from this project that have been retired, including those allocated to the buffer pool"
            },
            "short_code": {
              "description": "A random short code, uniquely identifying the project",
              "examples": ["F5X7"],
              "title": "Short Code",
              "type": "string"
            },
            "supplier": {
              "$ref": "#/components/schemas/Supplier"
            }
          },
          "required": [
            "id",
            "name",
            "supplier",
            "short_code",
            "country_code",
            "crediting_period_start",
            "crediting_period_end",
            "issued_credits_total",
            "retired_credits_total",
            "issued_buffer_pool_credits_total",
            "retired_buffer_pool_credits_total"
          ],
          "title": "Project",
          "type": "object"
        },
        "ProjectCreditBalance": {
          "properties": {
            "project_id": {
              "examples": ["pfx_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Project Id",
              "type": "string"
            },
            "total": {
              "$ref": "#/components/schemas/CreditBalance"
            }
          },
          "required": ["project_id", "total"],
          "title": "ProjectCreditBalance",
          "type": "object"
        },
        "Retirement": {
          "properties": {
            "beneficiary": {
              "$ref": "#/components/schemas/Organisation"
            },
            "credit_batch_size_total": {
              "$ref": "#/components/schemas/CreditQuantity"
            },
            "id": {
              "examples": ["abc_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Id",
              "type": "string"
            },
            "notes": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Notes"
            },
            "owner": {
              "$ref": "#/components/schemas/Organisation"
            },
            "purposes": {
              "items": {
                "$ref": "#/components/schemas/RetirementPurpose"
              },
              "title": "Purposes",
              "type": "array"
            },
            "retired_at": {
              "format": "date-time",
              "title": "Retired At",
              "type": "string"
            }
          },
          "required": [
            "id",
            "retired_at",
            "purposes",
            "beneficiary",
            "owner",
            "credit_batch_size_total",
            "notes"
          ],
          "title": "Retirement",
          "type": "object"
        },
        "RetirementPurpose": {
          "enum": [
            "corporate_targets",
            "public_environmental_claims",
            "regulatory_requirement",
            "other"
          ],
          "title": "RetirementPurpose",
          "type": "string"
        },
        "Supplier": {
          "properties": {
            "id": {
              "examples": ["abc_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Id",
              "type": "string"
            },
            "organisation": {
              "$ref": "#/components/schemas/Organisation"
            },
            "pathway": {
              "$ref": "#/components/schemas/PathwayType"
            }
          },
          "required": ["id", "pathway", "organisation"],
          "title": "Supplier",
          "type": "object"
        },
        "SupplierCreditBalance": {
          "properties": {
            "supplier_id": {
              "examples": ["pfx_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Supplier Id",
              "type": "string"
            },
            "total": {
              "$ref": "#/components/schemas/CreditBalance"
            }
          },
          "required": ["supplier_id", "total"],
          "title": "SupplierCreditBalance",
          "type": "object"
        },
        "Transfer": {
          "properties": {
            "credit_batch_size_total": {
              "$ref": "#/components/schemas/CreditQuantity"
            },
            "from_organisation": {
              "$ref": "#/components/schemas/Organisation"
            },
            "id": {
              "examples": ["abc_1H0G39139CF0DZB2"],
              "maxLength": 20,
              "minLength": 20,
              "title": "Id",
              "type": "string"
            },
            "notes": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Notes"
            },
            "to_organisation": {
              "$ref": "#/components/schemas/Organisation"
            },
            "transferred_at": {
              "format": "date-time",
              "title": "Transferred At",
              "type": "string"
            }
          },
          "required": [
            "id",
            "transferred_at",
            "from_organisation",
            "to_organisation",
            "credit_batch_size_total",
            "notes"
          ],
          "title": "Transfer",
          "type": "object"
        },
        "ValidationError": {
          "properties": {
            "loc": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ]
              },
              "title": "Location",
              "type": "array"
            },
            "msg": {
              "title": "Message",
              "type": "string"
            },
            "type": {
              "title": "Error Type",
              "type": "string"
            }
          },
          "required": ["loc", "msg", "type"],
          "title": "ValidationError",
          "type": "object"
        }
      },
      "securitySchemes": {
        "HTTPBearer": {
          "bearerFormat": "JWT",
          "description": "An JWT Bearer token header for authentication and authorization, in the format `Authorization: Bearer <token>`",
          "scheme": "bearer",
          "type": "http"
        }
      }
    },
    "info": {
      "description": "# Registry API Overview\n\nThis API is for the querying, delivery and retirement of Isometric Carbon Credits issued on the Isometric Registry.\n\n## Key Concepts\n\n### Credit Batches\n\nA 'Credit Batch' is a grouping of 1 or more credit units, where each credit unit represents 1kg of CO\u2082e removed.\n\nWhen credits are initially Issued, they will be batched together. When subsequent transactions are made using these credits,\nincluding deliveries, retirements and transfers, a batch might be split to make this possible.\n\nAll credits in batch will always have the same initial Supplier, Project and Issuance.\n\n#### Credit Batch Splitting\nIf the quantity of credits in a transaction request (delivery, transfer or retirement) does not match the full size of the submitted credit batches,\nthe batches submitted will be split in order to transact the exact credit amount requested.\n\nWhen a credit batch is split, it's status will be updated to `SPLIT` and it can no longer be interacted with.\n\nTwo *child* batches represented the two halves of the split are created with an `ACTIVE` status. The child batches will have a `parent_id` set\npointing at the orginally split batch. From the parent split batch, you can find it's two children via the `left_child_id` and `right_child_id` fields.\n# Standards\n\n## Versioning\n\nThis API will be safely versioned using root path versioning, in the format `/v{major}`. For example, `/registry/v0/supplier`.\n\n### Compatibility\n\nWe won't make breaking changes to existing API services or endpoints for API versions higher than `v0`. If breaking changes are necessary, we'll release a new major version.\nWe may deprecate APIs that have been replaced by a newer version. When doing so, we will expect\nintegrated partners to manage a transition to new resources within the deprecation timeline of old ones.\n\nWe will make the following sort of changes we do not consider to be breaking:\n\n- Adding new properties to existing API responses\n- Reordering properties in existing API responses\n- Adding optional query parameters to API endpoints\n\nIt is important that clients are built to be robust to these changes.\n\n\n## Client Authentication\n\nEvery API call to Isometric **must** include a client secret (an API Key) identifying the client application.\n\nThis client secret is tied to a particular environment - sandbox or production.\nA client secret can be obtained by contacting Isometric directly. Client secrets should be treated as highly sensitive, kept secret and stored accordingly.\n\nThe client secret should be submitted on every API request via the `X-Client-Secret` header. For example `X-Client-Secret: uPrO56C8ZjNbph6geXn_ERMMj13IwxAh`.\n\n## Organization Authentication\nIn addition a large number of API requests will require authorization in order the caller to identify themselves and act as a specific Organization.\n\nTo authenticate as an Organization you will need to submit a JWT bearer access token via the `Authorization` header. For example: `Authorization: Bearer eyJh...sw5c`.\nThis access token can be obtained by contacting Isometric directly. If you are going to be acting on behalf of other Organizations, they will need to request the access token from us and pass them securely to you.\nAccess token should be treated as highly sensitive, kept secret and stored accordingly.\n\nAccess tokens are scoped to a single Organization - so if you are acting on behalf of multiple particular organizations, you will need to submit the appropriate access token on each request.\n\nAccess tokens have a TTL of 1 year from generation. When you are approaching expiry, a new token will need to be generated and Isometric will guide you through rotating your current access token which will cease to work post-expiry.\n\nIf for whatever reason you suspect your access token is compromised, notify Isometric as soon as possible and we will provide a new access token and invalidate the old one.\n\n\n## Pagination\n\nOur API is based on the [Relay](https://relay.dev/docs/tutorial/connections-pagination/) pagination spec. Paginated endpoints\nwill return a `PaginatedListResource` which contains:\n\n- `page_info` - Containing information regarding pagination cursors and the total number of entities.\n- `nodes` - Each node is a paginated entity.\n- `total_count` - The total size of the list across all pages.\n\n### Pagination Parameters\n\nPaginated endpoints also accepted a standard set of query parameters:\n\n- `last` - An integer number of items to retrieve **before** the item represented by the cursor passed in the `before` parameter. Defaults to 10 with a maximum value of 50.\n- `before` - An opaque cursor representing the first item in the previously requested page to select items ordered before it. Submit the previously requested page's `start_cursor` here when paginated backwards.\n- `first` - An integer number of items to retrieve **after** the item represented by the cursor passed in the `after` parameter. Defaults to 10 with a maximum value of 50.\n- `after` - An opaque cursor representing the last item in the previously requested page to select items ordered after it. Submit the previously requested page's `end_cursor` here when paginated forwards.\n\nFor example, querying `/registry/v0/beneficiaries` will return a `PaginatedListResource` of the first page of 10 items:\n\n```json\n{\n    \"page_info\": {\n        \"has_previous_page\": false,\n        \"start_cursor\": ...,\n        \"has_next_page\": true,\n        \"end_cursor\": \"mpG5kcuoFBYtlH\",\n    },\n    \"nodes\": [{\n        \"id\": \"org_12345iso678\",\n        \"name\": \"My Org\",\n        ...\n    }],\n    \"total_count\": 100\n}\n```\n\nThen querying `/registry/v0/beneficiaries?first=15&after=mpG5kcuoFBYtlH` will return a `PaginatedListResource` of the next 15 items.\n\n## Dates\n\nDatetime fields in the APIs conform to the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time format in UTC. For example: `2024-01-22T11:56:48.520641Z`.\n\n## Country Codes\n\nCountries are identified in the APIs via [ISO 3166-1 Alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) codes. For example: `GBR` and `USA`\n",
      "title": "Isometric Registry API",
      "version": "v0"
    },
    "openapi": "3.1.0",
    "paths": {
      "/beneficiaries": {
        "get": {
          "description": "A paginated list of Organisations which the currently authenticated organisation can retire credits on the behalf of, using the `POST /retirements` endpoint.",
          "operationId": "beneficiaries_beneficiaries_get",
          "parameters": [
            {
              "in": "query",
              "name": "last",
              "required": false,
              "schema": {
                "default": 10,
                "exclusiveMinimum": 0,
                "maximum": 50,
                "title": "Last",
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "before",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Before"
              }
            },
            {
              "in": "query",
              "name": "first",
              "required": false,
              "schema": {
                "default": 10,
                "exclusiveMinimum": 0,
                "maximum": 50,
                "title": "First",
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "after",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "After"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedListResource_Organisation_"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Beneficiaries"
        }
      },
      "/credit_batches/{id}": {
        "get": {
          "operationId": "credit_batch_credit_batches__id__get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/APIIsometricId_CreditBatch_"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreditBatch"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Credit Batch"
        }
      },
      "/deliveries": {
        "post": {
          "operationId": "create_delivery_deliveries_post",
          "parameters": [
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDeliveryRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Delivery"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Create Delivery"
        }
      },
      "/deliveries/{id}": {
        "get": {
          "operationId": "delivery_deliveries__id__get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/APIIsometricId_Delivery_"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Delivery"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Delivery"
        }
      },
      "/deliveries/{id}/credit_batches": {
        "get": {
          "operationId": "delivery_credit_batches_deliveries__id__credit_batches_get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/APIIsometricId_Delivery_"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ListResource_CreditBatch_"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Delivery Credit Batches"
        }
      },
      "/issuances/{id}": {
        "get": {
          "operationId": "issuance_issuances__id__get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/APIIsometricId_Issuance_"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Issuance"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Issuance"
        }
      },
      "/issuances/{id}/credit_batches": {
        "get": {
          "operationId": "issuance_credit_batches_issuances__id__credit_batches_get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/APIIsometricId_Issuance_"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/IssuanceCreditBatches"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Issuance Credit Batches"
        }
      },
      "/orders/{id}": {
        "get": {
          "operationId": "order_orders__id__get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/APIIsometricId_Order_"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Order"
        }
      },
      "/orders/{id}/deliveries": {
        "get": {
          "operationId": "order_deliveries_orders__id__deliveries_get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/APIIsometricId_Order_"
              }
            },
            {
              "in": "query",
              "name": "last",
              "required": false,
              "schema": {
                "default": 10,
                "exclusiveMinimum": 0,
                "maximum": 50,
                "title": "Last",
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "before",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Before"
              }
            },
            {
              "in": "query",
              "name": "first",
              "required": false,
              "schema": {
                "default": 10,
                "exclusiveMinimum": 0,
                "maximum": 50,
                "title": "First",
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "after",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "After"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedListResource_Delivery_"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Order Deliveries"
        }
      },
      "/organisation": {
        "get": {
          "operationId": "current_organisation_organisation_get",
          "parameters": [
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Organisation"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Current Organisation"
        }
      },
      "/organisations/{id}": {
        "get": {
          "operationId": "organisation_organisations__id__get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/APIIsometricId_Organisation_"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/Organisation"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Response Organisation Organisations  Id  Get"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Organisation"
        }
      },
      "/organisations/{id}/credit_balance": {
        "get": {
          "operationId": "organisation_credit_balance_organisations__id__credit_balance_get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/APIIsometricId_Organisation_"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/OrganisationCreditBalance"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Organisation Credit Balance"
        }
      },
      "/organisations/{id}/credit_batches": {
        "get": {
          "description": "A paginated list of all credit batches currently owned or retired on behalf of the organisation, sorted by issuance date. By default it excludes batches with the status 'split'.",
          "operationId": "organisation_credit_batches_organisations__id__credit_batches_get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/APIIsometricId_Organisation_"
              }
            },
            {
              "in": "query",
              "name": "project_id",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/APIIsometricId_Project_"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Project Id"
              }
            },
            {
              "in": "query",
              "name": "issuance_id",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/APIIsometricId_Issuance_"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Issuance Id"
              }
            },
            {
              "in": "query",
              "name": "status",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "items": {
                      "$ref": "#/components/schemas/CreditBatchStatus"
                    },
                    "type": "array",
                    "uniqueItems": true
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Status"
              }
            },
            {
              "in": "query",
              "name": "last",
              "required": false,
              "schema": {
                "default": 10,
                "exclusiveMinimum": 0,
                "maximum": 50,
                "title": "Last",
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "before",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Before"
              }
            },
            {
              "in": "query",
              "name": "first",
              "required": false,
              "schema": {
                "default": 10,
                "exclusiveMinimum": 0,
                "maximum": 50,
                "title": "First",
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "after",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "After"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            },
            {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DatetimeFilter"
                  }
                }
              },
              "description": "Filter credit batches based on their `sequestered_at` date",
              "in": "query",
              "name": "sequestered_at_filter"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedListResource_CreditBatch_"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Organisation Credit Batches"
        }
      },
      "/projects/{id}": {
        "get": {
          "operationId": "project_projects__id__get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/APIIsometricId_Project_"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/Project"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Response Project Projects  Id  Get"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Project"
        }
      },
      "/retirements": {
        "post": {
          "description": "Retire credits from specific batches, in whole or with splits. All credit batches must originate from the same supplier and be owned by the current organisation.",
          "operationId": "create_retirement_retirements_post",
          "parameters": [
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRetirementRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Retirement"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Create Retirement"
        }
      },
      "/retirements/{id}": {
        "get": {
          "operationId": "retirement_retirements__id__get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/APIIsometricId_Retirement_"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Retirement"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Retirement"
        }
      },
      "/retirements/{id}/credit_batches": {
        "get": {
          "operationId": "retirement_credit_batches_retirements__id__credit_batches_get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/APIIsometricId_Retirement_"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ListResource_CreditBatch_"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Retirement Credit Batches"
        }
      },
      "/supplier": {
        "get": {
          "operationId": "current_supplier_supplier_get",
          "parameters": [
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Supplier"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Current Supplier"
        }
      },
      "/suppliers/{id}": {
        "get": {
          "operationId": "supplier_suppliers__id__get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/APIIsometricId_Supplier_"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/Supplier"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Response Supplier Suppliers  Id  Get"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Supplier"
        }
      },
      "/suppliers/{id}/deliveries": {
        "get": {
          "operationId": "supplier_deliveries_suppliers__id__deliveries_get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/APIIsometricId_Supplier_"
              }
            },
            {
              "in": "query",
              "name": "last",
              "required": false,
              "schema": {
                "default": 10,
                "exclusiveMinimum": 0,
                "maximum": 50,
                "title": "Last",
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "before",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Before"
              }
            },
            {
              "in": "query",
              "name": "first",
              "required": false,
              "schema": {
                "default": 10,
                "exclusiveMinimum": 0,
                "maximum": 50,
                "title": "First",
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "after",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "After"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedListResource_Delivery_"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Supplier Deliveries"
        }
      },
      "/suppliers/{id}/issuances": {
        "get": {
          "operationId": "supplier_issuances_suppliers__id__issuances_get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/APIIsometricId_Supplier_"
              }
            },
            {
              "in": "query",
              "name": "last",
              "required": false,
              "schema": {
                "default": 10,
                "exclusiveMinimum": 0,
                "maximum": 50,
                "title": "Last",
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "before",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Before"
              }
            },
            {
              "in": "query",
              "name": "first",
              "required": false,
              "schema": {
                "default": 10,
                "exclusiveMinimum": 0,
                "maximum": 50,
                "title": "First",
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "after",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "After"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedListResource_Issuance_"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Supplier Issuances"
        }
      },
      "/suppliers/{id}/orders": {
        "get": {
          "operationId": "supplier_orders_suppliers__id__orders_get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/APIIsometricId_Supplier_"
              }
            },
            {
              "in": "query",
              "name": "last",
              "required": false,
              "schema": {
                "default": 10,
                "exclusiveMinimum": 0,
                "maximum": 50,
                "title": "Last",
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "before",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Before"
              }
            },
            {
              "in": "query",
              "name": "first",
              "required": false,
              "schema": {
                "default": 10,
                "exclusiveMinimum": 0,
                "maximum": 50,
                "title": "First",
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "after",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "After"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedListResource_Order_"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Supplier Orders"
        }
      },
      "/suppliers/{id}/projects": {
        "get": {
          "operationId": "supplier_projects_suppliers__id__projects_get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/APIIsometricId_Supplier_"
              }
            },
            {
              "in": "query",
              "name": "last",
              "required": false,
              "schema": {
                "default": 10,
                "exclusiveMinimum": 0,
                "maximum": 50,
                "title": "Last",
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "before",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Before"
              }
            },
            {
              "in": "query",
              "name": "first",
              "required": false,
              "schema": {
                "default": 10,
                "exclusiveMinimum": 0,
                "maximum": 50,
                "title": "First",
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "after",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "After"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedListResource_Project_"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Supplier Projects"
        }
      },
      "/transferees": {
        "get": {
          "description": "A paginated list of Organisations which the currently authenticated organisation can transfer active credits to, using the `POST /transfers` endpoint.",
          "operationId": "transferees_transferees_get",
          "parameters": [
            {
              "in": "query",
              "name": "last",
              "required": false,
              "schema": {
                "default": 10,
                "exclusiveMinimum": 0,
                "maximum": 50,
                "title": "Last",
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "before",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Before"
              }
            },
            {
              "in": "query",
              "name": "first",
              "required": false,
              "schema": {
                "default": 10,
                "exclusiveMinimum": 0,
                "maximum": 50,
                "title": "First",
                "type": "integer"
              }
            },
            {
              "in": "query",
              "name": "after",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "After"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedListResource_Organisation_"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Transferees"
        }
      },
      "/transfers": {
        "post": {
          "description": "Transfer credits from specific batches, in whole or with splits. All credit batches must originate from the same supplier and be owned by the current organisation.",
          "operationId": "create_transfer_transfers_post",
          "parameters": [
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransferRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Transfer"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Create Transfer"
        }
      },
      "/transfers/{id}": {
        "get": {
          "operationId": "transfer_transfers__id__get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/APIIsometricId_Transfer_"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Transfer"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Transfer"
        }
      },
      "/transfers/{id}/credit_batches": {
        "get": {
          "operationId": "transfer_credit_batches_transfers__id__credit_batches_get",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/APIIsometricId_Transfer_"
              }
            },
            {
              "description": "A secret token identifying the client connecting to the API",
              "in": "header",
              "name": "x-client-secret",
              "required": true,
              "schema": {
                "description": "A secret token identifying the client connecting to the API",
                "examples": ["Syou3EZiO5vuMEgNyBeA8cjEMYOnQDwP"],
                "title": "Client secret",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ListResource_CreditBatch_"
                  }
                }
              },
              "description": "Successful Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              },
              "description": "Validation Error"
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "summary": "Transfer Credit Batches"
        }
      }
    },
    "servers": [
      {
        "description": "Sandbox Isometric Registry API",
        "url": "https://api.sandbox.isometric.com/registry/v0"
      },
      {
        "description": "Production Isometric Registry API",
        "url": "https://api.isometric.com/registry/v0"
      }
    ]
  }
  